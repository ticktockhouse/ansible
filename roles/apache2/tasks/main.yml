---
# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"
  tags: netdata

- name: Include variables for Amazon Linux.
  include_vars: "AmazonLinux.yml"
  when:
    - ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "NA"

- name: Define apache_packages.
  set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

# Setup/install tasks.
- include_tasks: "setup-{{ ansible_os_family }}.yml"

# Figure out what version of Apache is installed.
- name: Get installed version of Apache.
  command: "{{ apache_daemon_path }}{{ apache_daemon }} -v"
  changed_when: false
  check_mode: false
  register: _apache_version

- name: Create apache_version variable.
  set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- name: Include Apache 2.2 variables.
  include_vars: apache-22.yml
  when: "apache_version.split('.')[1] == '2'"

- name: Include Apache 2.4 variables.
  include_vars: apache-24.yml
  when: "apache_version.split('.')[1] == '4'"

# - name: Configure letsencrypt
#   include_tasks: letsencrypt.yml
#   when: apache_letsencrypt is defined and apache_letsencrypt
#   tags: letsencrypt

# Configure Apache.
- name: Configure Apache.
  include_tasks: "configure-{{ ansible_os_family }}.yml"

- name: Add server status config
  template:
    src: status.conf.j2
    dest: "{{ apache_conf_path }}/status.conf"
    owner: root  
    group: root  
    mode: 0644
  when: netdata_apache is defined and netdata_apache
  tags: netdata
  notify: restart apache

- name: Add local vhost
  template:
    src: localhost.conf.j2
    dest: "{{ apache_conf_path }}/localhost.conf"
    owner: root  
    group: root  
    mode: 0644

- name: Create vhosts base directory
  file:
    state: directory
    path: "{{ apache_vhosts_root }}"
    owner: root
    group: root
    mode: 0755

- name: Create vhost users
  user:
    name: "{{ item.slug }}"
    state: present
  loop: "{{ new_vhosts }}"
  when: new_vhosts is defined and new_vhosts

- name: Create vhosts directories
  file:
    state: directory
    path: "{{ apache_vhosts_root }}/{{ item.domain }}/httpdocs"
    owner: "{{ item.slug }}"
    group: "{{ item.slug }}"
    mode: 0755
  loop: "{{ new_vhosts }}"
  when: new_vhosts is defined and new_vhosts

- name: Create vhost users
  user:
    name: "{{ item.slug }}"
    state: present
  loop: "{{ wordpress_vhosts }}"
  when: wordpress_vhosts is defined and wordpress_vhosts

- name: Create vhosts directories
  file:
    state: directory
    path: "{{ apache_vhosts_root }}/{{ item.domain }}/httpdocs"
    owner: "{{ item.slug }}"
    group: "{{ item.slug }}"
    mode: 0755
  loop: "{{ wordpress_vhosts }}"
  when: wordpress_vhosts is defined and wordpress_vhosts