{{ apache_global_vhost_settings }}

{# Set up VirtualHosts #}
{% for vhost in new_vhosts %}
{% if vhost.tls is defined %}
<VirtualHost {{ apache_listen_ip }}:{{ apache_listen_port }}>
  ServerName {{ vhost.domain }}
  ServerAlias www.{{ vhost.domain }}
  Documentroot "{{ apache_vhosts_root }}/{{ vhost.domain }}/httpdocs"
  Redirect / https://{{ vhost.domain }}/
</VirtualHost>
{% endif %}

{% if vhost.tls is defined %}
<VirtualHost {{ apache_listen_ip }}:{{ apache_listen_port_ssl }}>
{% else %}
<VirtualHost {{ apache_listen_ip }}:{{ apache_listen_port }}>
{% endif %}
  ServerName {{ vhost.domain }}
  ServerAlias www.{{ vhost.domain }}
  ServerAdmin admin@{{ vhost.domain }}
  DocumentRoot "{{ apache_vhosts_root }}/{{ vhost.domain }}/httpdocs"
{% if vhost.tls is defined %}
  SSLEngine on
  SSLCipherSuite {{ apache_ssl_cipher_suite }}
  SSLProtocol {{ apache_ssl_protocol }}
  SSLHonorCipherOrder On
{% if apache_vhosts_version == "2.4" %}
  SSLCompression off
{% endif %}
{% if vhost.letsencrypt is defined %}
  SSLCertificateFile /etc/letsencrypt/live/{{ vhost.domain }}/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/{{ vhost.domain }}/privkey.pem
  SSLCertificateChainFile /etc/letsencrypt/live/{{ vhost.domain }}/chain.pem
{% else %}
  SSLCertificateFile {{ vhost.certificate_file }}
  SSLCertificateKeyFile {{ vhost.certificate_key_file }}
{% endif %}
{% if vhost.certificate_chain_file is defined %}
  SSLCertificateChainFile {{ vhost.certificate_chain_file }}
{% endif %}
{% if vhost.tls_custom is defined %}
  SSLCertificateFile {{ tls_custom_cert_file }}
  SSLCertificateKeyFile {{ tls_custom_key_file }}
  SSLCertificateChainFile {{ tls_custom_chain_file }}
{% endif %}
{% endif %}
  <Directory "{{ apache_vhosts_root }}/{{ vhost.domain }}/httpdocs">
    AllowOverride {{ vhost.allow_override | default(apache_allow_override) }}
    Options {{ vhost.options | default(apache_options) }}
{% if apache_vhosts_version == "2.2" %}
    Order allow,deny
    Allow from all
{% else %}
    Require all granted
{% endif %}
  </Directory>
{% if apache_global_vhost_based_logs is defined %}
	ErrorLog {{ apache_vhosts_root }}/{{ vhost.domain }}/logs/{{ vhost.domain }}-error.log
	LogLevel warn
  CustomLog {{ apache_vhosts_root }}/{{ vhost.domain }}/logs/{{ vhost.domain }}-access.log combined
{% else %}
	ErrorLog /var/log/{{ apache_daemon }}/{{ vhost.domain }}-error.log
	LogLevel warn
  CustomLog /var/log/{{ apache_daemon }}/{{ vhost.domain }}-access.log combined
{% endif %}
{% if vhost.php_fpm is defined %}
<IfModule proxy_fcgi_module>
    # Enable http authorization headers
    <IfModule setenvif_module>
    SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
    </IfModule>

    <FilesMatch ".+\.ph(ar|p|tml)$">
        SetHandler "proxy:unix:/run/php/php-fpm.{{ vhost.slug }}.sock|fcgi://localhost"
    </FilesMatch>
    <FilesMatch ".+\.phps$">
        # Deny access to raw php sources by default
        # To re-enable it's recommended to enable access to the files
        # only in specific virtual host or directory
       Require all denied
    </FilesMatch>
    # Deny access to files without filename (e.g. '.php')
    <FilesMatch "^\.ph(ar|p|ps|tml)$">
        Require all denied
    </FilesMatch>
</IfModule>
{% elif apache2_global_php_fpm is defined %}
<IfModule proxy_fcgi_module>
    # Enable http authorization headers
    <IfModule setenvif_module>
    SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
    </IfModule>

    <FilesMatch ".+\.ph(ar|p|tml)$">
        SetHandler "proxy:unix:/run/php/php-fpm.{{ vhost.slug }}.sock|fcgi://localhost"
    </FilesMatch>
    <FilesMatch ".+\.phps$">
        # Deny access to raw php sources by default
        # To re-enable it's recommended to enable access to the files
        # only in specific virtual host or directory
       Require all denied
    </FilesMatch>
    # Deny access to files without filename (e.g. '.php')
    <FilesMatch "^\.ph(ar|p|ps|tml)$">
        Require all denied
    </FilesMatch>
</IfModule>

{% endif %}

</VirtualHost>
{% endfor %}

