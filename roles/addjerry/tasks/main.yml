---
- name: Include pesky OS-specific vars
  include_vars: "{{ item }}"
  with_items:
     - "{{ ansible_os_family }}.yml"


- name: Debug login_users
  debug:
    var: login_users

- name: Create supplementary groups, if defined
  group:
    name: "{{ item.groups }}"
    state: present
  with_items: "{{ login_users }}"
  when: item.groups is defined and item.groups
  

- name: Add user(s)!
  user:
    name: "{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    create_home: "{{ item.create_home | default('no') }}"
  with_items: "{{ login_users }}"

- name: Create home dirs if necessary
  user:
    name: "{{ item.name }}"
    create_home: "{{ item.create_home | default(omit) }}"
    home: "{{ item.home | default(omit) }}"
  with_items: "{{ login_users }}"

- name: Add SSH key if needed
  user:
    name: "{{ item.name }}"
    generate_ssh_key: "{{ item.gen_ssh | default(omit) }}"
    ssh_key_bits: "4096"
  with_items: "{{ login_users }}"
  register: ssh_key_data

- name: Ensure pubkey auth is enabled
  lineinfile:
    dest: /etc/ssh/sshd_config 
    regexp: "^PubkeyAuthentication"
    line: "PubkeyAuthentication yes"
    state: present
  notify:
    - restart sshd

- debug:
    var: login_users
  tags: addsshkeys

- name: Add authorized keys
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', 'files/' + item.name + '.key.pub', errors='warn') }}"
  with_items: "{{ login_users }}"
  tags: addsshkeys

- include_tasks: sudo.yml

- include_tasks: disable.yml
  when: secure_ssh is defined and secure_ssh

- pause:
    prompt: "Probably best to abort here and continue as the 'jerry' user"