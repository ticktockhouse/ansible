---
# Stick backup_user_password in host_vars/<hostname>, or in the governing playbook
- name: Ensure mysql-python is installed
  package:
    name: "{{ mysql_python_package }}"
    state: present

- set_fact:
    backed_up_mysql_password: "{{ lookup('password', '/dev/null length=32') }}"

- debug:
    var: backed_up_mysql_password

- name: Create "backup" mysql user
  mysql_user:
    name: backup
    password: "{{ backed_up_mysql_password }}"
    priv: "*.*:SELECT,LOCK TABLES,SHOW DATABASES,RELOAD"

- name: Create "backup" UNIX user
  user:
    name: "{{ backed_up_user }}"
    comment: "Unprivileged user for backups"
    state: present
    password: "*" 

- name: Add bkup's .ssh directory
  file:
    path: /home/"{{ backed_up_user }}"/.ssh
    state: directory
    mode: 0700
    owner: "{{ backed_up_user }}"
    group: "{{ backed_up_group }}"

- name: Add (empty) authorized_keys file for bkup
  file:
    path: /home/"{{ backed_up_user }}"/.ssh/authorized_keys
    state: touch
    mode: 0600
    owner: "{{ backed_up_user }}"
    group: "{{ backed_up_group }}"

- name: Copy .my.cnf into place
  template:
    src: my.cnf.j2
    dest: "~{{ backed_up_user }}/.my.cnf"
    owner: "{{ backed_up_user }}"
    group: "{{ backed_up_group }}"

- name: Mysql backup cron script
  template:
    src: mysqldump.sh.j2
    dest: /usr/local/bin/mysqldump.sh
    mode: 0755

- name: Add cron job
  cron:
    name: "Dump individual mysql DBs"
    hour: "{{ backed_up_cron_hour }}"
    minute:  "{{ backed_up_cron_minute }}"
    user: "{{ backed_up_user }}"
    job: /usr/local/bin/mysqldump.sh

- name: Add mysqldump dir for er... mysql dumps
  file:
    path: "{{ backed_up_mysqldump_dir }}"
    state: directory
    owner: "{{ backed_up_user }}"
    group: "{{ backed_up_group }}"

- set_fact:
    restic_backup_dirs:
      - "{{ backed_up_mysqldump_dir }}"
